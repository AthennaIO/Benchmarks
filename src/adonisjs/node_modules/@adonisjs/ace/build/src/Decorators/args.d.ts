import { CommandArg } from '../Contracts';
export declare const args: {
    /**
     * Define argument that accepts string value
     */
    string(options?: Partial<Omit<CommandArg, "type" | "propertyName">> | undefined): <TKey extends string, TTarget extends { [K in TKey]?: string | undefined; }>(target: TTarget, propertyName: TKey) => void;
    /**
     * Define argument that accepts multiple values. Must be
     * the last argument.
     */
    spread(options?: Partial<Omit<CommandArg, "type" | "propertyName">> | undefined): <TKey_1 extends string, TTarget_1 extends { [K_1 in TKey_1]?: string[] | undefined; }>(target: TTarget_1, propertyName: TKey_1) => void;
};
