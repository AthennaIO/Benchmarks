"use strict";
/*
 * @adonisjs/core
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FakeDriver = void 0;
/**
 * Fake driver stubs out the implementation of the Assets
 * manager with empty return data.
 *
 * The main use case is to make assets manager work during
 * testing without compiling the real assets
 */
class FakeDriver {
    constructor(application) {
        this.application = application;
        this.name = 'fake';
        this.hasEntrypoints = true;
        this.publicPath = this.application.publicPath('assets');
    }
    get version() {
        return '';
    }
    /**
     * Returns the manifest contents as object
     */
    manifest() {
        return {};
    }
    /**
     * Returns path to a given asset file
     */
    assetPath(name) {
        return `__fake('${name}')`;
    }
    /**
     * Returns the entrypoints contents as object
     */
    entryPoints() {
        return {};
    }
    /**
     * Returns list for all the javascript files for a given entry point
     */
    entryPointJsFiles(_) {
        return [];
    }
    /**
     * Returns list for all the css files for a given entry point
     */
    entryPointCssFiles(_) {
        return [];
    }
}
exports.FakeDriver = FakeDriver;
