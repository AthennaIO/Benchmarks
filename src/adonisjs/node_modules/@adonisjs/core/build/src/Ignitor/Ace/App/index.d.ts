/**
 * Exposes the API to execute app commands registered under
 * the manifest file.
 */
export declare class App {
    private appRoot;
    private commandName;
    /**
     * Returns a boolean if mentioned command is an assembler
     * command
     */
    private get isAssemblerCommand();
    /**
     * Reference to the app kernel
     */
    private kernel;
    /**
     * Reference to the ace kernel
     */
    private ace;
    /**
     * Source root always points to the compiled source
     * code.
     */
    constructor(appRoot: string);
    /**
     * Print commands help
     */
    private printHelp;
    /**
     * Print framework version
     */
    private printVersion;
    /**
     * Invoked before command source will be read from the
     * disk
     */
    private onFind;
    /**
     * Invoked before command is about to run.
     */
    private onRun;
    /**
     * Hooks into ace lifecycle events to conditionally
     * load the app.
     */
    private registerAceHooks;
    /**
     * Adding flags
     */
    private registerAceFlags;
    /**
     * Load commands using manifest loader
     */
    loadCommands(): Promise<void>;
    /**
     * Handle application command
     */
    handle(argv: string[]): Promise<void>;
}
