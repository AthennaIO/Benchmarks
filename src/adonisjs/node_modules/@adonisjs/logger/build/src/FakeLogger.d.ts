/// <reference path="../adonis-typings/logger.d.ts" />
import Pino from 'pino';
import { LoggerConfig } from '@ioc:Adonis/Core/Logger';
import { Logger } from './Logger';
/**
 * Fake logger that sets a custom logger stream and returns
 * the log messages as an array vs writing them to `stdout`.
 */
export declare class FakeLogger extends Logger {
    constructor(config: LoggerConfig, pino?: Pino.Logger);
    /**
     * An array of in-memory logs
     */
    get logs(): any[];
    /**
     * Returns the child fake logger. All logs from the child
     * are writte to the same top level stream
     */
    child(bindings: {
        level?: Pino.Level | string;
        serializers?: {
            [key: string]: Pino.SerializerFn;
        };
        [key: string]: any;
    }): FakeLogger;
    /**
     * Clear in-memory logs
     */
    clear(): void;
}
