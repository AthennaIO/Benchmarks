import { ValidationField, SchemaObject } from '@ioc:Adonis/Core/Validator';
import { Compiler } from '../index';
import { CompilerBuffer } from '../Buffer';
/**
 * Exposes the API to compile the object node to a set of inline
 * Javascript instructions.
 */
export declare class ObjectCompiler {
    private field;
    private node;
    private compiler;
    private references;
    constructor(field: ValidationField, node: SchemaObject, compiler: Compiler, references: {
        outVariable: string;
        referenceVariable: string;
        parentPointer: ValidationField[];
    });
    /**
     * Declaring the out variable as an empty object. As the validations
     * will progress, this object will receive new properties
     */
    private declareOutVariable;
    /**
     * Adds a guard that ensures that the runtime value of the field
     * is a valid object, before we attempt to validate it's
     * children.
     */
    private startIfGuard;
    /**
     * Ends the previously started if guard
     */
    private endIfGuard;
    /**
     * Converts the object node to compiled Javascript statement.
     */
    compile(buffer: CompilerBuffer): void;
}
