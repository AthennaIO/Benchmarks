{"version":3,"sources":["../../../src/migrate/tags/main.ts","../../../src/migrate/tags/set.ts","../../../src/migrate/tags/super.ts","../../../src/migrate/tags/layout.ts","../../../src/migrate/tags/section.ts","../../../src/migrate/globals.ts","../../../src/migrate/plugin.ts"],"sourcesContent":["/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport { setTag as set } from './set.js'\nexport { superTag as super } from './super.js'\nexport { layoutTag as layout } from './layout.js'\nexport { sectionTag as section } from './section.js'\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { EdgeError } from 'edge-error'\nimport { expressions } from 'edge-parser'\nimport lodash from '@poppinss/utils/lodash'\n\nimport { TagContract } from '../../types.js'\nimport { isSubsetOf, unallowedExpression, parseJsArg } from '../../utils.js'\n\ndeclare module '../../template.js' {\n  export interface Template {\n    setValue: (typeof lodash)['set']\n  }\n}\n\n/**\n * The set tag is used to set runtime values within the template. The value\n * is set inside the current scope of the template.\n *\n * ```edge\n * @set('user.username', 'virk')\n * <p> {{ user.username }} </p>\n * ```\n *\n * Set it inside the each loop.\n *\n * ```edge\n * @each(user in users)\n *   @set('age', user.age + 1)\n *   {{ age }}\n * @endeach\n * ```\n */\nexport const setTag: TagContract = {\n  block: false,\n  seekable: true,\n  tagName: 'set',\n  noNewLine: true,\n\n  /**\n   * Compiles else block node to Javascript else statement\n   */\n  compile(parser, buffer, token) {\n    const parsed = parseJsArg(parser, token)\n\n    /**\n     * The set tag only accepts a sequence expression.\n     */\n    isSubsetOf(parsed, [expressions.SequenceExpression], () => {\n      throw unallowedExpression(\n        `\"${token.properties.jsArg}\" is not a valid key-value pair for the @slot tag`,\n        token.filename,\n        parser.utils.getExpressionLoc(parsed)\n      )\n    })\n\n    /**\n     * Disallow less than 2 and more than 3 values for the sequence\n     * expression\n     */\n    if (parsed.expressions.length < 2 || parsed.expressions.length > 3) {\n      throw new EdgeError(\n        '@set tag accepts a minimum of 2 or maximum or 3 arguments',\n        'E_INVALID_ARGUMENTS_COUNT',\n        {\n          line: parsed.loc.start.line,\n          col: parsed.loc.start.column,\n          filename: token.filename,\n        }\n      )\n    }\n\n    /**\n     * Extract key-value and the collection (if any)\n     */\n    let collection: any\n    let key: any\n    let value: any\n\n    if (parsed.expressions.length === 3) {\n      collection = parsed.expressions[0]\n      key = parsed.expressions[1]\n      value = parsed.expressions[2]\n    } else {\n      key = parsed.expressions[0]\n      value = parsed.expressions[1]\n    }\n\n    /**\n     * Mutate the collection when defined\n     */\n    if (collection) {\n      buffer.writeExpression(\n        `template.setValue(${parser.utils.stringify(collection)}, '${\n          key.value\n        }', ${parser.utils.stringify(value)})`,\n        token.filename,\n        token.loc.start.line\n      )\n      return\n    }\n\n    /**\n     * Write statement to mutate the key. If the variable has already been\n     * defined, then just update it's value.\n     *\n     * We do not allow re-declaring a variable as of now\n     */\n    const expression = parser.stack.has(key.value)\n      ? `${key.value} = ${parser.utils.stringify(value)}`\n      : `let ${key.value} = ${parser.utils.stringify(value)}`\n\n    buffer.writeExpression(expression, token.filename, token.loc.start.line)\n    parser.stack.defineVariable(key.value)\n  },\n\n  /**\n   * Add methods to the template for running the loop\n   */\n  boot(template) {\n    template.macro('setValue', lodash.set)\n  },\n}\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { EdgeError } from 'edge-error'\nimport { TagContract } from '../../types.js'\n\n/**\n * Super tag is used inside sections to inherit the parent section\n * content.\n *\n * The implementation of super tag is handled by the compiler itself, but we need\n * the tag to exists, so that the lexer can parse it as a tag.\n */\nexport const superTag: TagContract = {\n  block: false,\n  seekable: false,\n  tagName: 'super',\n\n  compile(_, __, token) {\n    throw new EdgeError(\n      '@super tag must appear as top level tag inside the @section tag',\n      'E_ORPHAN_SUPER_TAG',\n      {\n        line: token.loc.start.line,\n        col: token.loc.start.col,\n        filename: token.filename,\n      }\n    )\n  },\n}\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { TagContract } from '../../types.js'\n\n/**\n * Layout tag is used to define parent layout for a given template. The layout\n * must appear in the first line of the template itself.\n */\nexport const layoutTag: TagContract = {\n  block: false,\n  seekable: true,\n  tagName: 'layout',\n  noNewLine: true,\n\n  compile() {\n    // The layouts are handled by the template itself. I am just a way to\n    // tell lexer to parse me as a block node\n  },\n}\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { TagContract } from '../../types.js'\n\n/**\n * Section tag is used to define the sections on a given template. Sections cannot be\n * nested and must appear as top level children inside a component.\n */\nexport const sectionTag: TagContract = {\n  block: true,\n  seekable: true,\n  tagName: 'section',\n\n  compile(parser, buffer, token) {\n    token.children.forEach((child) => parser.processToken(child, buffer))\n  },\n}\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { EdgeError } from 'edge-error'\n// @ts-ignore untyped module\nimport stringify from 'js-stringify'\n// @ts-ignore untyped module\nimport inspect from '@poppinss/inspect'\nconst { string: prettyPrintHtml } = inspect\nimport string from '@poppinss/utils/string'\n\nimport { htmlSafe, escape } from '../template.js'\n\nexport const GLOBALS = {\n  /**\n   * Converts new lines to break\n   */\n  nl2br: (value: string | null | undefined) => {\n    if (!value) {\n      return\n    }\n\n    return String(value).replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1<br>')\n  },\n\n  /**\n   * Inspect state\n   */\n  inspect: (value: any) => {\n    return htmlSafe(prettyPrintHtml.html(value))\n  },\n\n  /**\n   * Truncate a sentence\n   */\n  truncate: (\n    value: string,\n    length: number = 20,\n    options?: { completeWords?: boolean; strict?: boolean; suffix?: string }\n  ) => {\n    options = options || {}\n    return string.truncate(value, length, {\n      completeWords: options.completeWords !== undefined ? options.completeWords : !options.strict,\n      suffix: options.suffix,\n    })\n  },\n\n  /**\n   * Raise an exception\n   */\n  raise: (message: string, options?: any) => {\n    if (!options) {\n      throw new Error(message)\n    } else {\n      throw new EdgeError(message, 'E_RUNTIME_EXCEPTION', options)\n    }\n  },\n\n  /**\n   * Generate an excerpt\n   */\n  excerpt: (\n    value: string,\n    length: number = 20,\n    options?: { completeWords?: boolean; strict?: boolean; suffix?: string }\n  ) => {\n    options = options || {}\n    return string.excerpt(value, length, {\n      completeWords: options.completeWords !== undefined ? options.completeWords : !options.strict,\n      suffix: options.suffix,\n    })\n  },\n  /**\n   * Using `\"e\"` because, `escape` is a global function in the\n   * Node.js global namespace and edge parser gives priority\n   * to it\n   */\n  e: escape,\n\n  /**\n   * Convert javascript data structures to a string. The method is a little\n   * better over JSON.stringify in handling certain data structures. For\n   * example: In JSON.stringify, the date is converted to an ISO string\n   * whereas this method converts it to an actual instance of date\n   */\n  stringify: stringify,\n  safe: htmlSafe,\n  camelCase: string.camelCase,\n  snakeCase: string.snakeCase,\n  dashCase: string.dashCase,\n  pascalCase: string.pascalCase,\n  capitalCase: string.capitalCase,\n  sentenceCase: string.sentenceCase,\n  dotCase: string.dotCase,\n  noCase: string.noCase,\n  titleCase: string.titleCase,\n  pluralize: string.pluralize,\n  sentence: string.sentence,\n  prettyMs: string.milliseconds.format,\n  toMs: string.milliseconds.parse,\n  prettyBytes: string.bytes.format,\n  toBytes: string.bytes.parse,\n  ordinal: string.ordinal,\n} as Record<string, Function>\n","/*\n * edge.js\n *\n * (c) Edge\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport * as Tags from './tags/main.js'\nimport { GLOBALS } from './globals.js'\nimport type { PluginFn } from '../types.js'\n\nexport const migrate: PluginFn<undefined> = (edge) => {\n  edge.compat = true\n  edge.compiler.compat = true\n  edge.asyncCompiler.compat = true\n  Object.keys(GLOBALS).forEach((name) => {\n    edge.global(name, GLOBALS[name])\n  })\n  Object.keys(Tags).forEach((name) => {\n    edge.registerTag(Tags[name as keyof typeof Tags])\n  })\n}\n"],"mappings":"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","names":["EdgeError","EdgeError","EdgeError"]}