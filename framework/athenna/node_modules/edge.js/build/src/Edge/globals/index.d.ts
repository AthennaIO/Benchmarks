import { string } from '@poppinss/utils/build/helpers';
import { safeValue, escape } from '../../Template';
export declare const GLOBALS: {
    /**
     * Converts new lines to break
     */
    nl2br: (value: string | null | undefined) => string | undefined;
    /**
     * Inspect state
     */
    inspect: (value: any) => import("../../Template").SafeValue;
    /**
     * Truncate a sentence
     */
    truncate: (value: string, length?: number, options?: {
        completeWords?: boolean;
        strict?: boolean;
        suffix?: string;
    }) => string;
    /**
     * Raise an exception
     */
    raise: (message: string, options?: any) => never;
    /**
     * Generate an excerpt
     */
    excerpt: (value: string, length?: number, options?: {
        completeWords?: boolean;
        strict?: boolean;
        suffix?: string;
    }) => string;
    /**
     * Using `"e"` because, `escape` is a global function in the
     * Node.js global namespace and edge parser gives priority
     * to it
     */
    e: typeof escape;
    /**
     * Convert javascript data structures to a string. The method is a little
     * better over JSON.stringify in handling certain data structures. For
     * example: In JSON.stringify, the date is converted to an ISO string
     * whereas this method converts it to an actual instance of date
     */
    stringify: any;
    safe: typeof safeValue;
    camelCase: typeof string.camelCase;
    snakeCase: typeof string.snakeCase;
    dashCase: typeof string.dashCase;
    pascalCase: typeof string.pascalCase;
    capitalCase: typeof string.capitalCase;
    sentenceCase: typeof string.sentenceCase;
    dotCase: typeof string.dotCase;
    noCase: typeof string.noCase;
    titleCase: typeof string.titleCase;
    pluralize: typeof string.pluralize;
    toSentence: typeof string.toSentence;
    prettyBytes: typeof string.prettyBytes;
    toBytes: typeof string.toBytes;
    prettyMs: typeof string.prettyMs;
    toMs: typeof string.toMs;
    ordinalize: typeof string.ordinalize;
};
