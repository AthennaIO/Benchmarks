{"version":3,"sources":["../src/template.ts","../src/migrate/props.ts","../src/component/props.ts","../src/utils.ts"],"sourcesContent":["/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport he from 'he'\nimport { EdgeError } from 'edge-error'\nimport lodash from '@poppinss/utils/lodash'\nimport Macroable from '@poppinss/macroable'\n\nimport { Compiler } from './compiler.js'\nimport { Processor } from './processor.js'\nimport { Props } from './migrate/props.js'\nimport type { CompiledTemplate } from './types.js'\nimport { ComponentProps } from './component/props.js'\n\n/**\n * An instance of this class passed to the escape\n * method ensures that underlying value is never\n * escaped.\n */\nclass SafeValue {\n  constructor(public value: any) {}\n}\n\n/**\n * Escapes a given string\n */\nexport function escape(input: any): string {\n  return input instanceof SafeValue ? input.value : he.escape(String(input))\n}\n\n/**\n * Mark value as safe and not to be escaped\n */\nexport function htmlSafe(value: string) {\n  return new SafeValue(value)\n}\n\n/**\n * The template is used to compile and run templates. Also the instance\n * of template is passed during runtime to render `dynamic partials`\n * and `dynamic components`.\n */\nexport class Template extends Macroable {\n  #compiler: Compiler\n  #processor: Processor\n\n  /**\n   * The shared state is used to hold the globals and locals,\n   * since it is shared with components too.\n   */\n  #sharedState: Record<string, any>\n\n  constructor(compiler: Compiler, globals: any, locals: any, processor: Processor) {\n    super()\n    this.#compiler = compiler\n    this.#processor = processor\n    this.#sharedState = compiler.compat\n      ? lodash.merge({}, globals, locals)\n      : {\n          ...globals,\n          ...locals,\n        }\n  }\n\n  /**\n   * Trims top and bottom new lines from the content\n   */\n  #trimTopBottomNewLines(value: string) {\n    return value.replace(/^\\n|^\\r\\n/, '').replace(/\\n$|\\r\\n$/, '')\n  }\n\n  /**\n   * Render a compiled template with state\n   */\n  #renderCompiled(compiledTemplate: CompiledTemplate, state: any) {\n    const templateState = { ...this.#sharedState, ...state }\n    const $context = {}\n\n    /**\n     * Process template as a promise.\n     */\n    if (this.#compiler.async) {\n      return compiledTemplate(this, templateState, $context).then((output: string) => {\n        output = this.#trimTopBottomNewLines(output)\n        return this.#processor.executeOutput({ output, template: this, state: templateState })\n      })\n    }\n\n    const output = this.#trimTopBottomNewLines(compiledTemplate(this, templateState, $context))\n    return this.#processor.executeOutput({ output, template: this, state: templateState })\n  }\n\n  /**\n   * Render a partial\n   *\n   * ```js\n   * const partialFn = template.compilePartial('includes/user')\n   *\n   * // render and use output\n   * partialFn(template, state, ctx)\n   * ```\n   */\n  compilePartial(templatePath: string, ...localVariables: string[]): CompiledTemplate {\n    return this.#compiler.compile(templatePath, localVariables)\n  }\n\n  /**\n   * Render a component\n   *\n   * ```js\n   * const componentFn = template.compileComponent('components/button')\n   *\n   * // render and use output\n   * componentFn(template, template.getComponentState(props, slots, caller), ctx)\n   * ```\n   */\n  compileComponent(templatePath: string): CompiledTemplate {\n    return this.#compiler.compile(templatePath)\n  }\n\n  /**\n   * Returns the isolated state for a given component\n   */\n  getComponentState(\n    props: { [key: string]: any },\n    slots: { [key: string]: any },\n    caller: { filename: string; line: number; col: number }\n  ) {\n    return {\n      ...this.#sharedState,\n      ...props,\n      $slots: slots,\n      $caller: caller,\n      $props: this.#compiler.compat ? new Props(props) : new ComponentProps(props),\n    }\n  }\n\n  /**\n   * Render a template with it's state.\n   *\n   * ```js\n   * template.render('welcome', { key: 'value' })\n   * ```\n   */\n  render<T extends Promise<string> | string>(template: string, state: any): T {\n    let compiledTemplate = this.#compiler.compile(template)\n    return this.#renderCompiled(compiledTemplate, state)\n  }\n\n  /**\n   * Render template from a raw string\n   *\n   * ```js\n   * template.renderRaw('Hello {{ username }}', { username: 'virk' })\n   * ```\n   */\n  renderRaw<T extends Promise<string> | string>(\n    contents: string,\n    state: any,\n    templatePath?: string\n  ): T {\n    let compiledTemplate = this.#compiler.compileRaw(contents, templatePath)\n    return this.#renderCompiled(compiledTemplate, state)\n  }\n\n  /**\n   * Escapes the value to be HTML safe. Only strings are escaped\n   * and rest all values will be returned as it is.\n   */\n  escape(input: any): string {\n    return escape(input)\n  }\n\n  /**\n   * Raise an error\n   */\n  newError(errorMessage: string, filename: string, lineNumber: number, column: number) {\n    throw new EdgeError(errorMessage, 'E_RUNTIME_EXCEPTION', {\n      filename: filename,\n      line: lineNumber,\n      col: column,\n    })\n  }\n\n  /**\n   * Rethrows the runtime exception by re-constructing the error message\n   * to point back to the original filename\n   */\n  reThrow(error: any, filename: string, lineNumber: number): never {\n    if (error instanceof EdgeError) {\n      throw error\n    }\n\n    const message = error.message.replace(/state\\./, '')\n    throw new EdgeError(message, 'E_RUNTIME_EXCEPTION', {\n      filename: filename,\n      line: lineNumber,\n      col: 0,\n    })\n  }\n}\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport lodash from '@poppinss/utils/lodash'\nimport stringifyAttributes from 'stringify-attributes'\n\nimport { htmlSafe } from '../template.js'\nimport { ComponentProps } from '../component/props.js'\n\n/**\n * Class to ease interactions with component props\n */\nexport class Props {\n  /**\n   * Use \".next\" property to migrate to newer\n   * api\n   */\n  next: ComponentProps\n\n  constructor(props: any) {\n    // @ts-ignore\n    this[Symbol.for('options')] = { props }\n    Object.assign(this, props)\n    this.next = new ComponentProps(props)\n  }\n\n  /**\n   * Merges the className attribute with the class attribute\n   */\n  #mergeClassAttributes(props: any) {\n    if (props.className) {\n      if (!props.class) {\n        props.class = []\n      }\n\n      /**\n       * Normalize class attribute to be an array\n       */\n      if (!Array.isArray(props.class)) {\n        props.class = [props.class]\n      }\n\n      props.class = props.class.concat(props.className)\n      props.className = false\n    }\n\n    return props\n  }\n\n  /**\n   * Find if a key exists inside the props\n   */\n  has(key: string) {\n    const value = this.get(key)\n    return value !== undefined && value !== null\n  }\n\n  /**\n   * Get value for a given key\n   */\n  get(key: string, defaultValue?: any) {\n    return lodash.get(this.all(), key, defaultValue)\n  }\n\n  /**\n   * Returns all the props\n   */\n  all() {\n    // @ts-ignore\n    return this[Symbol.for('options')].props\n  }\n\n  /**\n   * Validate prop value\n   */\n  validate(key: string, validateFn: (key: string, value?: any) => any) {\n    const value = this.get(key)\n    validateFn(key, value)\n  }\n\n  /**\n   * Return values for only the given keys\n   */\n  only(keys: string[]) {\n    return lodash.pick(this.all(), keys)\n  }\n\n  /**\n   * Return values except the given keys\n   */\n  except(keys: string[]) {\n    return lodash.omit(this.all(), keys)\n  }\n\n  /**\n   * Serialize all props to a string of HTML attributes\n   */\n  serialize(mergeProps?: any, prioritizeInline: boolean = true) {\n    /**\n     * Prioritize user attributes when prioritizeInline=false\n     */\n    const attributes = prioritizeInline\n      ? lodash.merge({}, this.all(), mergeProps)\n      : lodash.merge({}, mergeProps, this.all())\n\n    return htmlSafe(stringifyAttributes(this.#mergeClassAttributes(attributes)))\n  }\n\n  /**\n   * Serialize only the given keys to a string of HTML attributes\n   */\n  serializeOnly(keys: string[], mergeProps?: any, prioritizeInline: boolean = true) {\n    /**\n     * Prioritize user attributes when prioritizeInline=false\n     */\n    const attributes = prioritizeInline\n      ? lodash.merge({}, this.only(keys), mergeProps)\n      : lodash.merge({}, mergeProps, this.only(keys))\n\n    return htmlSafe(stringifyAttributes(this.#mergeClassAttributes(attributes)))\n  }\n\n  /**\n   * Serialize except the given keys to a string of HTML attributes\n   */\n  serializeExcept(keys: string[], mergeProps?: any, prioritizeInline: boolean = true) {\n    /**\n     * Prioritize user attributes when prioritizeInline=false\n     */\n    const attributes = prioritizeInline\n      ? lodash.merge({}, this.except(keys), mergeProps)\n      : lodash.merge({}, mergeProps, this.except(keys))\n\n    return htmlSafe(stringifyAttributes(this.#mergeClassAttributes(attributes)))\n  }\n}\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport lodash from '@poppinss/utils/lodash'\nimport { htmlSafe } from '../template.js'\nimport { stringifyAttributes } from '../utils.js'\n\n/**\n * Representation of component props with ability to serialize\n * them into HTML attributes\n */\nexport class ComponentProps {\n  #values: Record<string, any>\n\n  constructor(values: Record<string, any>) {\n    this.#values = values\n    Object.assign(this, values)\n  }\n\n  /**\n   * Create a typed instance of Component props with properties\n   */\n  static create<T extends Record<string, any>>(values: T): ComponentProps & T {\n    return new ComponentProps(values) as ComponentProps & T\n  }\n\n  /**\n   * Reference to props raw values\n   */\n  all() {\n    return this.#values\n  }\n\n  /**\n   * Check if a key exists\n   */\n  has(key: string) {\n    return lodash.has(this.#values, key)\n  }\n\n  /**\n   * Get key value\n   */\n  get(key: string, defaultValue?: any) {\n    return lodash.get(this.#values, key, defaultValue)\n  }\n\n  /**\n   * Returns a new props bag with only the mentioned keys\n   */\n  only(keys: string[]) {\n    return new ComponentProps(lodash.pick(this.#values, keys))\n  }\n\n  /**\n   * Returns a new props bag with except the mentioned keys\n   */\n  except(keys: string[]) {\n    return new ComponentProps(lodash.omit(this.#values, keys))\n  }\n\n  /**\n   * Merge defaults with the props\n   *\n   * - All other attributes will be overwritten when defined in props\n   * - Classes will be merged together.\n   */\n  merge(values: Record<string, any>) {\n    if (values.class && this.#values['class']) {\n      const classesSet: Set<any> = new Set()\n      ;(Array.isArray(values.class) ? values.class : [values]).forEach((item) => {\n        classesSet.add(item)\n      })\n      ;(Array.isArray(this.#values['class'])\n        ? this.#values['class']\n        : [this.#values['class']]\n      ).forEach((item) => {\n        classesSet.add(item)\n      })\n\n      return new ComponentProps({ ...values, ...this.#values, class: Array.from(classesSet) })\n    }\n\n    return new ComponentProps({ ...values, ...this.#values })\n  }\n\n  /**\n   * Merge defaults with the props, if the given condition is truthy\n   */\n  mergeIf(conditional: any, values: Record<string, any>) {\n    if (conditional) {\n      return this.merge(values)\n    }\n    return this\n  }\n\n  /**\n   * Merge defaults with the props, if the given condition is falsy\n   */\n  mergeUnless(conditional: any, values: Record<string, any>) {\n    if (!conditional) {\n      return this.merge(values)\n    }\n    return this\n  }\n\n  /**\n   * Converts props to HTML attributes\n   */\n  toAttrs() {\n    return htmlSafe(stringifyAttributes(this.#values))\n  }\n}\n","/*\n * edge.js\n *\n * (c) EdgeJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport classNames from 'classnames'\nimport { EdgeError } from 'edge-error'\nimport type { TagToken } from 'edge-lexer/types'\nimport { find, html } from 'property-information'\nimport { expressions as expressionsList, Parser } from 'edge-parser'\n\ntype ExpressionList = readonly (keyof typeof expressionsList | 'ObjectPattern' | 'ArrayPattern')[]\n\n/**\n * Function to register custom properties\n * with \"property-information\" package.\n */\nfunction definePropertyInformation(property: string, value?: any) {\n  html.normal[property] = property\n  html.property[property] = {\n    attribute: property,\n    boolean: true,\n    property: property,\n    space: 'html',\n    booleanish: false,\n    commaOrSpaceSeparated: false,\n    commaSeparated: false,\n    spaceSeparated: false,\n    number: false,\n    overloadedBoolean: false,\n    defined: false,\n    mustUseProperty: false,\n    ...value,\n  }\n}\n\ndefinePropertyInformation('x-cloak')\ndefinePropertyInformation('x-ignore')\ndefinePropertyInformation('x-transition:enterstart', {\n  attribute: 'x-transition:enter-start',\n  property: 'x-transition:enterStart',\n  boolean: false,\n  spaceSeparated: true,\n  commaOrSpaceSeparated: true,\n})\ndefinePropertyInformation('x-transition:enterend', {\n  attribute: 'x-transition:enter-end',\n  property: 'x-transition:enterEnd',\n  boolean: false,\n  spaceSeparated: true,\n  commaOrSpaceSeparated: true,\n})\ndefinePropertyInformation('x-transition:leavestart', {\n  attribute: 'x-transition:leave-start',\n  property: 'x-transition:leaveStart',\n  boolean: false,\n  spaceSeparated: true,\n  commaOrSpaceSeparated: true,\n})\ndefinePropertyInformation('x-transition:leaveend', {\n  attribute: 'x-transition:leave-end',\n  property: 'x-transition:leaveEnd',\n  boolean: false,\n  spaceSeparated: true,\n  commaOrSpaceSeparated: true,\n})\n\n/**\n * Alpine namespaces we handle with special\n * rules when stringifying attributes\n */\nconst alpineNamespaces: Record<string, string> = {\n  x: 'x-',\n  xOn: 'x-on:',\n  xBind: 'x-bind:',\n  xTransition: 'x-transition:',\n}\n\n/**\n * Raise an `E_UNALLOWED_EXPRESSION` exception. Filename and expression is\n * required to point the error stack to the correct file\n */\nexport function unallowedExpression(\n  message: string,\n  filename: string,\n  loc: { line: number; col: number }\n) {\n  throw new EdgeError(message, 'E_UNALLOWED_EXPRESSION', {\n    line: loc.line,\n    col: loc.col,\n    filename: filename,\n  })\n}\n\n/**\n * Validates the expression type to be part of the allowed\n * expressions only.\n *\n * The filename is required to report errors.\n *\n * ```js\n * isNotSubsetOf(expression, ['Literal', 'Identifier'], () => {})\n * ```\n */\nexport function isSubsetOf(\n  expression: any,\n  expressions: ExpressionList,\n  errorCallback: () => void\n) {\n  if (!expressions.includes(expression.type)) {\n    errorCallback()\n  }\n}\n\n/**\n * Validates the expression type not to be part of the disallowed\n * expressions.\n *\n * The filename is required to report errors.\n *\n * ```js\n * isNotSubsetOf(expression, 'SequenceExpression', () => {})\n * ```\n */\nexport function isNotSubsetOf(\n  expression: any,\n  expressions: ExpressionList,\n  errorCallback: () => void\n) {\n  if (expressions.includes(expression.type)) {\n    errorCallback()\n  }\n}\n\n/**\n * Parses the jsArg by generating and transforming its AST\n */\nexport function parseJsArg(parser: Parser, token: TagToken) {\n  return parser.utils.transformAst(\n    parser.utils.generateAST(token.properties.jsArg, token.loc, token.filename),\n    token.filename,\n    parser\n  )\n}\n\n/**\n * Each loop. A soft replacement for `lodash.each` that we were using earlier\n */\nexport function each(collection: any, iteratee: (value: any, key: any) => void) {\n  if (Array.isArray(collection)) {\n    for (let [key, value] of collection.entries()) {\n      iteratee(value, key)\n    }\n    return\n  }\n\n  if (typeof collection === 'string') {\n    let index = 0\n    for (let value of collection) {\n      iteratee(value, index++)\n    }\n    return\n  }\n\n  if (collection && typeof collection === 'object') {\n    for (let [key, value] of Object.entries(collection)) {\n      iteratee(value, key)\n    }\n  }\n}\n\n/**\n * Async each loop. A soft replacement for `lodash.each` that we were\n * using earlier with support for async await\n */\nexport async function asyncEach(\n  collection: any,\n  iteratee: (value: any, key: any) => Promise<void>\n) {\n  if (Array.isArray(collection)) {\n    for (let [key, value] of collection.entries()) {\n      await iteratee(value, key)\n    }\n    return\n  }\n\n  if (typeof collection === 'string') {\n    let index = 0\n    for (let value of collection) {\n      await iteratee(value, index++)\n    }\n    return\n  }\n\n  if (collection && typeof collection === 'object') {\n    for (let [key, value] of Object.entries(collection)) {\n      await iteratee(value, key)\n    }\n  }\n}\n\n/**\n * This class generates a valid object as a string, which is written to the template\n * output. The reason we need a string like object, since we don't want it's\n * properties to be evaluated during the object creation, instead it must\n * be evaluated when the compiled output is invoked.\n */\nexport class StringifiedObject {\n  #obj: string = ''\n\n  addSpread(key: string) {\n    this.#obj += this.#obj.length ? `, ${key}` : `${key}`\n  }\n\n  /**\n   * Add key/value pair to the object.\n   *\n   * ```js\n   * stringifiedObject.add('username', `'virk'`)\n   * ```\n   */\n  add(key: any, value: any, isComputed: boolean = false) {\n    key = isComputed ? `[${key}]` : key\n    this.#obj += this.#obj.length ? `, ${key}: ${value}` : `${key}: ${value}`\n  }\n\n  /**\n   * Returns the object alike string back.\n   *\n   * ```js\n   * stringifiedObject.flush()\n   *\n   * // returns\n   * `{ username: 'virk' }`\n   * ```\n   */\n  flush(): string {\n    const obj = `{ ${this.#obj} }`\n    this.#obj = ''\n    return obj\n  }\n}\n\n/**\n * Stringify an object to props to HTML attributes\n */\nexport function stringifyAttributes(props: any, namespace?: string): string {\n  const attributes = Object.keys(props)\n  if (attributes.length === 0) {\n    return ''\n  }\n\n  return attributes\n    .reduce<string[]>((result, key) => {\n      let value = props[key]\n      key = namespace ? `${namespace}${key}` : key\n\n      /**\n       * No value defined, remove attribute\n       */\n      if (!value) {\n        return result\n      }\n\n      /**\n       * Handle alpine properties separately\n       */\n      if (alpineNamespaces[key] && typeof value === 'object') {\n        result = result.concat(stringifyAttributes(value, alpineNamespaces[key]))\n        return result\n      }\n\n      const propInfo = find(html, key)\n\n      /**\n       * Ignore unknown attributes\n       */\n      if (!propInfo) {\n        return result\n      }\n\n      const attribute = propInfo.attribute\n\n      /**\n       * Boolean properties\n       */\n      if (value === true) {\n        result.push(attribute)\n        return result\n      }\n\n      /**\n       * Encoding rules for certain properties.\n       *\n       * - Class values can be objects with conditionals\n       * - Non-booleanish and numeric properties will be html escaped\n       * - Arrays will be concatenated into a string list and html escaped\n       */\n      if (key === 'class') {\n        value = `\"${classNames(value)}\"`\n      } else if (Array.isArray(value)) {\n        value = `\"${value.join(propInfo.commaSeparated ? ',' : ' ')}\"`\n      } else {\n        value = `\"${String(value)}\"`\n      }\n\n      /**\n       * Push attribute value string\n       */\n      result.push(`${attribute}=${value}`)\n      return result\n    }, [])\n    .join(' ')\n}\n"],"mappings":"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","names":["EdgeError","lodash","lodash","stringifyAttributes","lodash","stringifyAttributes","lodash","output","EdgeError"]}