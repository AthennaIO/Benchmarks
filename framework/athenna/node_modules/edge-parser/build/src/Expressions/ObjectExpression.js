"use strict";
/*
 * edge-parser
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const transformAst_1 = require("../Parser/transformAst");
const edge_error_1 = require("edge-error");
exports.default = {
    toStatement(statement, filename, parser) {
        statement.properties = statement.properties.map((node) => {
            if (node.type === 'Property') {
                /**
                 * Since we change the structure of node.value, we have to
                 * turnoff shorthand objects, so that the astring outputs
                 * the key name explicitly
                 */
                node.shorthand = false;
                if (node.computed === true) {
                    node.key = (0, transformAst_1.transformAst)(node.key, filename, parser);
                }
                node.value = (0, transformAst_1.transformAst)(node.value, filename, parser);
                return node;
            }
            if (node.type === 'SpreadElement') {
                return (0, transformAst_1.transformAst)(node, filename, parser);
            }
            const { line, col } = parser.utils.getExpressionLoc(node);
            throw new edge_error_1.EdgeError(`Report this error to the maintainers: Unexpected object property type "${node.type}"`, 'E_PARSER_ERROR', {
                line,
                col,
                filename,
            });
        });
        return statement;
    },
};
