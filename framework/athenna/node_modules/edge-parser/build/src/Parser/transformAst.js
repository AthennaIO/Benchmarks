"use strict";
/*
 * edge-lexer
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformAst = void 0;
const edge_error_1 = require("edge-error");
const Expressions = __importStar(require("../Expressions"));
/**
 * Transform acorn AST to Edge AST. This must always be performed before
 * writing it to the compiled template buffer.
 */
function transformAst(astExpression, filename, parser) {
    if (Expressions[astExpression.type]) {
        return Expressions[astExpression.type].toStatement(astExpression, filename, parser);
    }
    const { type, loc } = astExpression;
    throw new edge_error_1.EdgeError(`"${type}" is not supported`, 'E_UNALLOWED_EXPRESSION', {
        line: loc.start.line,
        col: loc.start.column,
        filename: filename,
    });
}
exports.transformAst = transformAst;
