{"version":3,"sources":["../index.ts","../src/secret.ts","../src/compose.ts","../src/exception.ts","../src/exceptions/runtime_exception.ts","../src/import_default.ts","../src/define_static_property.ts","../src/flatten.ts","../src/fs_import_all.ts","../src/fs_read_all.ts","../src/slash.ts","../src/natural_sort.ts","../src/is_script_file.ts","../src/message_builder.ts","../src/object_builder.ts","../src/safe_equal.ts","../src/exceptions/invalid_arguments_exception.ts"],"sourcesContent":["/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { fileURLToPath } from 'node:url'\nimport { join as pathJoin, dirname as pathDirname } from 'node:path'\n\nexport { Secret } from './src/secret.js'\nexport { base64 } from './src/base64.js'\nexport { compose } from './src/compose.js'\nexport { importDefault } from './src/import_default.js'\nexport { defineStaticProperty } from './src/define_static_property.js'\nexport { Exception, createError } from './src/exception.js'\nexport { flatten } from './src/flatten.js'\nexport { fsImportAll } from './src/fs_import_all.js'\nexport { fsReadAll } from './src/fs_read_all.js'\nexport { isScriptFile } from './src/is_script_file.js'\nexport { MessageBuilder } from './src/message_builder.js'\nexport { naturalSort } from './src/natural_sort.js'\nexport { ObjectBuilder } from './src/object_builder.js'\nexport { safeEqual } from './src/safe_equal.js'\nexport { slash } from './src/slash.js'\nexport { RuntimeException } from './src/exceptions/runtime_exception.js'\nexport { InvalidArgumentsException } from './src/exceptions/invalid_arguments_exception.js'\n\n/**\n * Get dirname for a given file path URL\n */\nexport function getDirname(url: string | URL) {\n  return pathDirname(getFilename(url))\n}\n\n/**\n * Get filename for a given file path URL\n */\nexport function getFilename(url: string | URL) {\n  return fileURLToPath(url)\n}\n\n/**\n * Join paths to a URL instance or a URL string. The return\n * value will be a file path without the `file:///` protocol.\n */\nexport function joinToURL(url: string | URL, ...str: string[]) {\n  return pathJoin(getDirname(url), ...str)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nconst REDACTED = '[redacted]'\n\n/**\n * Define a Secret value that hides itself from the logs or the console\n * statements.\n *\n * The idea is to prevent accedential leaking of sensitive information.\n * Idea borrowed from.\n * https://transcend.io/blog/keep-sensitive-values-out-of-your-logs-with-types\n */\nexport class Secret<T> {\n  /** The secret value */\n  #value: T\n  #keyword: string\n\n  constructor(value: T, redactedKeyword?: string) {\n    this.#value = value\n    this.#keyword = redactedKeyword || REDACTED\n  }\n\n  toJSON(): string {\n    return this.#keyword\n  }\n  valueOf(): string {\n    return this.#keyword\n  }\n  [Symbol.for('nodejs.util.inspect.custom')](): string {\n    return this.#keyword\n  }\n  toLocaleString(): string {\n    return this.#keyword\n  }\n  toString(): string {\n    return this.#keyword\n  }\n\n  /**\n   * Returns the original value\n   */\n  release(): T {\n    return this.#value\n  }\n\n  /**\n   * Transform the original value and create a new\n   * secret from it.\n   */\n  map<R>(transformFunc: (value: T) => R): Secret<R> {\n    return new Secret(transformFunc(this.#value))\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { Constructor } from './types.js'\n\ninterface UnaryFunction<T, R> {\n  (source: T): R\n}\n\n/**\n * Compose a class by applying mixins to it.\n * The code is inspired by https://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/, its\n * just that I have added the support for static types too.\n */\nexport function compose<T extends Constructor, A>(superclass: T, mixin: UnaryFunction<T, A>): A\nexport function compose<T extends Constructor, A, B>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>\n): B\nexport function compose<T extends Constructor, A, B, C>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>\n): C\nexport function compose<T extends Constructor, A, B, C, D>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>\n): D\nexport function compose<T extends Constructor, A, B, C, D, E>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinE: UnaryFunction<D, E>\n): E\nexport function compose<T extends Constructor, A, B, C, D, E, F>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>\n): F\nexport function compose<T extends Constructor, A, B, C, D, E, F, G>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>,\n  mixinG: UnaryFunction<F, G>\n): G\nexport function compose<T extends Constructor, A, B, C, D, E, F, G, H>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>,\n  mixinG: UnaryFunction<F, G>,\n  mixinH: UnaryFunction<G, H>\n): H\nexport function compose<T extends Constructor, A, B, C, D, E, F, G, H, I>(\n  superclass: T,\n  mixin: UnaryFunction<T, A>,\n  mixinB: UnaryFunction<A, B>,\n  mixinC: UnaryFunction<B, C>,\n  mixinD: UnaryFunction<C, D>,\n  mixinF: UnaryFunction<E, F>,\n  mixinG: UnaryFunction<F, G>,\n  mixinH: UnaryFunction<G, H>,\n  mixinI: UnaryFunction<H, I>\n): I\nexport function compose<T extends Constructor, Mixins extends UnaryFunction<T, T>>(\n  superclass: T,\n  ...mixins: Mixins[]\n) {\n  return mixins.reduce((c, mixin) => mixin(c), superclass)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { format } from 'node:util'\n\n/**\n * Extended Error object with the option to set error `status` and `code`.\n * At AdonisJs, we prefer exceptions with proper error codes to handle\n * them without relying on message pattern matching.\n *\n * ```js\n * new Exception('message', 500, 'E_RUNTIME_EXCEPTION')\n * ```\n */\nexport class Exception extends Error {\n  /**\n   * Static properties to defined on the exception once\n   * and then re-use them\n   */\n  declare static help?: string\n  declare static code?: string\n  declare static status?: number\n  declare static message?: string\n\n  /**\n   * Name of the class that raised the exception.\n   */\n  name: string\n\n  /**\n   * Optional help description for the error. You can use it to define additional\n   * human readable information for the error.\n   */\n  declare help?: string\n\n  /**\n   * A machine readable error code. This will allow the error handling logic\n   * to narrow down exceptions based upon the error code.\n   */\n  declare code?: string\n\n  /**\n   * A status code for the error. Usually helpful when converting errors\n   * to HTTP responses.\n   */\n  status: number\n\n  constructor(message?: string, options?: ErrorOptions & { code?: string; status?: number }) {\n    super(message, options)\n\n    const ErrorConstructor = this.constructor as typeof Exception\n\n    this.name = ErrorConstructor.name\n    this.message = message || ErrorConstructor.message || ''\n    this.status = options?.status || ErrorConstructor.status || 500\n\n    const code = options?.code || ErrorConstructor.code\n    if (code !== undefined) {\n      this.code = code\n    }\n\n    const help = ErrorConstructor.help\n    if (help !== undefined) {\n      this.help = help\n    }\n\n    Error.captureStackTrace(this, ErrorConstructor)\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.constructor.name\n  }\n\n  toString() {\n    if (this.code) {\n      return `${this.name} [${this.code}]: ${this.message}`\n    }\n    return `${this.name}: ${this.message}`\n  }\n}\n\n/**\n * Helper to create anonymous error classes\n */\nexport function createError<T extends any[] = never>(\n  message: string,\n  code: string,\n  status?: number\n): typeof Exception & T extends never\n  ? { new (args?: any, options?: ErrorOptions): Exception }\n  : { new (args: T, options?: ErrorOptions): Exception } {\n  return class extends Exception {\n    static message = message\n    static code = code\n    static status = status\n\n    constructor(args: T, options?: ErrorOptions) {\n      super(format(message, ...(args || [])), options)\n      this.name = 'Exception'\n    }\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Exception } from '../exception.js'\n\nexport class RuntimeException extends Exception {\n  static code = 'E_RUNTIME_EXCEPTION'\n  static status = 500\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { RuntimeException } from './exceptions/runtime_exception.js'\n\n/**\n * Dynamically import a module and ensure it has a default export\n */\nexport async function importDefault<T extends object>(\n  importFn: () => Promise<T>,\n  filePath?: string\n): Promise<T extends { default: infer A } ? A : never> {\n  const moduleExports = await importFn()\n\n  /**\n   * Make sure a default export exists\n   */\n  if (!('default' in moduleExports)) {\n    const errorMessage = filePath\n      ? `Missing \"export default\" in module \"${filePath}\"`\n      : `Missing \"export default\" from lazy import \"${importFn}\"`\n\n    throw new RuntimeException(errorMessage, {\n      cause: {\n        source: importFn,\n      },\n    })\n  }\n\n  return moduleExports.default as Promise<T extends { default: infer A } ? A : never>\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport lodash from '@poppinss/utils/lodash'\n\ntype Constructor = new (...args: any[]) => any\ntype AbstractConstructor = abstract new (...args: any[]) => any\n\n/**\n * Define static properties on a class with inheritance in play.\n */\nexport function defineStaticProperty<\n  T extends Constructor | AbstractConstructor,\n  Prop extends keyof T,\n>(\n  self: T,\n  propertyName: Prop,\n  {\n    initialValue,\n    strategy,\n  }: {\n    initialValue: T[Prop]\n    strategy: 'inherit' | 'define' | ((value: T[Prop]) => T[Prop])\n  }\n) {\n  if (!self.hasOwnProperty(propertyName)) {\n    const value = self[propertyName]\n\n    /**\n     * Define the property as it is when the strategy is set\n     * to \"define\". Or the value on the prototype chain\n     * is set to undefined.\n     */\n    if (strategy === 'define' || value === undefined) {\n      Object.defineProperty(self, propertyName, {\n        value: initialValue,\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      })\n      return\n    }\n\n    Object.defineProperty(self, propertyName, {\n      value: typeof strategy === 'function' ? strategy(value) : lodash.cloneDeep(value),\n      configurable: true,\n      enumerable: true,\n      writable: true,\n    })\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// @ts-expect-error (Package has no types)\nimport { flattie } from 'flattie'\n\n/**\n * Recursively flatten an object/array.\n */\nexport function flatten<X = Record<string, any>, Y = unknown>(\n  input: Y,\n  glue?: string,\n  keepNullish?: boolean\n): X {\n  return flattie(input, glue, keepNullish)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { fileURLToPath } from 'node:url'\nimport lodash from '@poppinss/utils/lodash'\nimport { extname, relative, sep } from 'node:path'\n\nimport { fsReadAll } from './fs_read_all.js'\nimport { ImportAllFilesOptions } from './types.js'\nimport { isScriptFile } from './is_script_file.js'\n\n/**\n * Import the file and update the values collection with the default\n * export.\n */\nasync function importFile(\n  basePath: string,\n  fileURL: string,\n  values: any,\n  options: ImportAllFilesOptions\n) {\n  /**\n   * Converting URL to file path\n   */\n  const filePath = fileURLToPath(fileURL)\n\n  /**\n   * Grab file extension\n   */\n  const fileExtension = extname(filePath)\n\n  const collectionKey = relative(basePath, filePath) // Get file relative path\n    .replace(new RegExp(`${fileExtension}$`), '') // Get rid of the file extension\n    .split(sep) // Convert nested paths to an array of keys\n\n  /**\n   * Import module\n   */\n  const exportedValue =\n    fileExtension === '.json'\n      ? await import(fileURL, { assert: { type: 'json' } })\n      : await import(fileURL)\n\n  lodash.set(\n    values,\n    options.transformKeys ? options.transformKeys(collectionKey) : collectionKey,\n    exportedValue.default ? exportedValue.default : { ...exportedValue }\n  )\n}\n\n/**\n * Returns an array of file paths from the given location. You can\n * optionally filter and sort files by passing relevant options\n *\n * ```ts\n * await fsReadAll(new URL('./', import.meta.url))\n *\n * await fsReadAll(new URL('./', import.meta.url), {\n *   filter: (filePath) => filePath.endsWith('.js')\n * })\n\n * await fsReadAll(new URL('./', import.meta.url), {\n *   absolute: true,\n *   unixPaths: true\n * })\n* ```\n */\nexport async function fsImportAll(\n  location: string | URL,\n  options?: ImportAllFilesOptions\n): Promise<any> {\n  options = options || {}\n  const collection: any = {}\n  const normalizedLocation = typeof location === 'string' ? location : fileURLToPath(location)\n  const files = await fsReadAll(normalizedLocation, {\n    filter: isScriptFile,\n    ...options,\n    pathType: 'url',\n  })\n\n  /**\n   * Parallelly import all the files and mutate the values collection\n   */\n  await Promise.all(files.map((file) => importFile(normalizedLocation, file, collection, options!)))\n\n  return collection\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { join } from 'node:path'\nimport { readdir, stat } from 'node:fs/promises'\nimport { fileURLToPath, pathToFileURL } from 'node:url'\n\nimport { slash } from './slash.js'\nimport { naturalSort } from './natural_sort.js'\nimport { ReadAllFilesOptions } from './types.js'\n\n/**\n * Filter to remove dot files\n */\nfunction filterDotFiles(fileName: string) {\n  return fileName[0] !== '.'\n}\n\n/**\n * Read all files from the directory recursively\n */\nasync function readFiles(\n  root: string,\n  files: string[],\n  options: ReadAllFilesOptions,\n  relativePath: string\n): Promise<void> {\n  const location = join(root, relativePath)\n  const stats = await stat(location)\n\n  if (stats.isDirectory()) {\n    let locationFiles = await readdir(location)\n\n    await Promise.all(\n      locationFiles.filter(filterDotFiles).map((file) => {\n        return readFiles(root, files, options, join(relativePath, file))\n      })\n    )\n\n    return\n  }\n\n  const pathType = options.pathType || 'relative'\n  switch (pathType) {\n    case 'relative':\n      files.push(relativePath)\n      break\n    case 'absolute':\n      files.push(location)\n      break\n    case 'unixRelative':\n      files.push(slash(relativePath))\n      break\n    case 'unixAbsolute':\n      files.push(slash(location))\n      break\n    case 'url':\n      files.push(pathToFileURL(location).href)\n  }\n}\n\n/**\n * Returns an array of file paths from the given location. You can\n * optionally filter and sort files by passing relevant options\n *\n * ```ts\n * await fsReadAll(new URL('./', import.meta.url))\n *\n * await fsReadAll(new URL('./', import.meta.url), {\n *   filter: (filePath) => filePath.endsWith('.js')\n * })\n\n * await fsReadAll(new URL('./', import.meta.url), {\n *   absolute: true,\n *   unixPaths: true\n * })\n* ```\n */\nexport async function fsReadAll(\n  location: string | URL,\n  options?: ReadAllFilesOptions\n): Promise<string[]> {\n  const normalizedLocation = typeof location === 'string' ? location : fileURLToPath(location)\n  const normalizedOptions = Object.assign({ absolute: false, sort: naturalSort }, options)\n  const files: string[] = []\n\n  /**\n   * Check to see if the root directory exists and ignore\n   * error when \"ignoreMissingRoot\" is set to true\n   */\n  try {\n    await stat(normalizedLocation)\n  } catch (error) {\n    if (normalizedOptions.ignoreMissingRoot) {\n      return []\n    }\n\n    throw error\n  }\n\n  await readFiles(normalizedLocation, files, normalizedOptions, '')\n\n  if (normalizedOptions.filter) {\n    return files.filter(normalizedOptions.filter).sort(normalizedOptions.sort)\n  }\n\n  return files.sort(normalizedOptions.sort)\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport { default as slash } from 'slash'\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Perform natural sorting with \"Array.sort()\" method\n */\nexport function naturalSort(current: string, next: string) {\n  return current.localeCompare(next, undefined, { numeric: true, sensitivity: 'base' })\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extname } from 'node:path'\nconst JS_MODULES = ['.js', '.json', '.cjs', '.mjs']\n\n/**\n * Returns `true` when file ends with `.js`, `.json` or\n * `.ts` but not `.d.ts`.\n */\nexport function isScriptFile(filePath: string) {\n  const ext = extname(filePath)\n\n  if (JS_MODULES.includes(ext)) {\n    return true\n  }\n\n  if (ext === '.ts' && !filePath.endsWith('.d.ts')) {\n    return true\n  }\n\n  return false\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport json from './json/main.js'\nimport milliseconds from './string/milliseconds.js'\n\n/**\n * Message builder exposes an API to \"JSON.stringify\" values by\n * encoding purpose and expiry date inside them.\n *\n * The return value must be further encrypted to prevent tempering.\n */\nexport class MessageBuilder {\n  #getExpiryDate(expiresIn?: string | number): undefined | Date {\n    if (!expiresIn) {\n      return undefined\n    }\n\n    const expiryMs = milliseconds.parse(expiresIn)\n    return new Date(Date.now() + expiryMs)\n  }\n\n  /**\n   * Returns a boolean telling, if message has been expired or not\n   */\n  #isExpired(message: any) {\n    if (!message.expiryDate) {\n      return false\n    }\n\n    const expiryDate = new Date(message.expiryDate)\n    return Number.isNaN(expiryDate.getTime()) || expiryDate < new Date()\n  }\n\n  /**\n   * Builds a message by encoding expiry date and purpose inside it.\n   */\n  build(message: any, expiresIn?: string | number, purpose?: string): string {\n    const expiryDate = this.#getExpiryDate(expiresIn)\n    return json.safeStringify({ message, purpose, expiryDate })!\n  }\n\n  /**\n   * Verifies the message for expiry and purpose.\n   */\n  verify<T extends any>(message: any, purpose?: string): null | T {\n    const parsed = json.safeParse(message)\n\n    /**\n     * After JSON.parse we do not receive a valid object\n     */\n    if (typeof parsed !== 'object' || !parsed) {\n      return null\n    }\n\n    /**\n     * Missing \".message\" property\n     */\n    if (!parsed.message) {\n      return null\n    }\n\n    /**\n     * Ensure purposes are same.\n     */\n    if (parsed.purpose !== purpose) {\n      return null\n    }\n\n    /**\n     * Ensure isn't expired\n     */\n    if (this.#isExpired(parsed)) {\n      return null\n    }\n\n    return parsed.message\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { OmitProperties } from './types.js'\n\n/**\n * A simple class to build an object incrementally. It is helpful when you\n * want to add properties to the object conditionally.\n *\n * Instead of writing\n * ```\n * const obj = {\n *   ...(user.id ? { id: user.id } : {}),\n *   ...(user.firstName && user.lastName ? { name: `${user.firstName} ${user.lastName}` } : {}),\n * }\n * ```\n *\n * You can write\n *\n * const obj = new ObjectBuilder()\n *   .add('id', user.id)\n *   .add(\n *     'fullName',\n *     user.firstName && user.lastName ? `${user.firstName} ${user.lastName}` : undefined\n *   )\n *   .toObject()\n */\nexport class ObjectBuilder<\n  ReturnType extends Record<string, any>,\n  IgnoreNull extends boolean = false,\n> {\n  #ignoreNull: boolean\n  values: ReturnType\n\n  constructor(initialValue: ReturnType, ignoreNull?: IgnoreNull) {\n    this.values = initialValue\n    this.#ignoreNull = ignoreNull === true ? true : false\n  }\n\n  /**\n   * Add a key-value pair to the object\n   *\n   * - Undefined values are ignored\n   * - Null values are ignored, when `ignoreNull` is set to true\n   */\n  add<Prop extends string>(key: Prop, value: undefined): this\n  add<Prop extends string, Value>(\n    key: Prop,\n    value: Value\n  ): ObjectBuilder<ReturnType & { [P in Prop]: Value }, IgnoreNull>\n  add<Prop extends string, Value>(key: Prop, value: Value): this {\n    if (value === undefined) {\n      return this\n    }\n\n    if (this.#ignoreNull === true && value === null) {\n      return this\n    }\n\n    ;(this.values as any)[key] = value\n    return this\n  }\n\n  /**\n   * Remove key from the object\n   */\n  remove<K extends keyof ReturnType>(key: K): this {\n    delete this.values[key]\n    return this\n  }\n\n  /**\n   * Find if a value exists\n   */\n  has<K extends keyof ReturnType>(key: K): boolean {\n    return this.get(key) !== undefined\n  }\n\n  /**\n   * Get the existing value for a given key\n   */\n  get<K extends keyof ReturnType>(key: K): ReturnType[K] {\n    return this.values[key]\n  }\n\n  /**\n   * Get the underlying constructed object\n   */\n  toObject(): IgnoreNull extends true\n    ? { [K in keyof OmitProperties<ReturnType, null>]: ReturnType[K] }\n    : { [K in keyof ReturnType]: ReturnType[K] } {\n    return this.values\n  }\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Buffer } from 'node:buffer'\nimport { timingSafeEqual } from 'node:crypto'\n\ntype BufferSafeValue =\n  | ArrayBuffer\n  | SharedArrayBuffer\n  | number[]\n  | string\n  | { valueOf(): string | object }\n  | { [Symbol.toPrimitive](hint: 'string'): string }\n\n/**\n * Compare two values to see if they are equal. The comparison is done in\n * a way to avoid timing-attacks.\n */\nexport function safeEqual<T extends BufferSafeValue, U extends BufferSafeValue>(\n  trustedValue: T,\n  userInput: U\n): boolean {\n  if (typeof trustedValue === 'string' && typeof userInput === 'string') {\n    /**\n     * The length of the comparison value.\n     */\n    const trustedLength = Buffer.byteLength(trustedValue)\n\n    /**\n     * Expected value\n     */\n    const trustedValueBuffer = Buffer.alloc(trustedLength, 0, 'utf-8')\n    trustedValueBuffer.write(trustedValue)\n\n    /**\n     * Actual value (taken from user input)\n     */\n    const userValueBuffer = Buffer.alloc(trustedLength, 0, 'utf-8')\n    userValueBuffer.write(userInput)\n\n    /**\n     * Ensure values are same and also have same length\n     */\n    return (\n      timingSafeEqual(trustedValueBuffer, userValueBuffer) &&\n      trustedLength === Buffer.byteLength(userInput)\n    )\n  }\n\n  return timingSafeEqual(\n    Buffer.from(trustedValue as ArrayBuffer | SharedArrayBuffer),\n    Buffer.from(userInput as ArrayBuffer | SharedArrayBuffer)\n  )\n}\n","/*\n * @poppinss/utils\n *\n * (c) Poppinss\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Exception } from '../exception.js'\n\nexport class InvalidArgumentsException extends Exception {\n  static code = 'E_INVALID_ARGUMENTS_EXCEPTION'\n  static status = 500\n}\n"],"mappings":"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","names":["fileURLToPath","fileURLToPath","lodash","extname","default","default","fileURLToPath","extname","lodash","fileURLToPath"]}