/// <reference types="node" />
/**
 * Lookup the type for a given value
 */
export declare function lookup(value: any): 'undefined' | 'null' | 'boolean' | 'buffer' | 'number' | 'string' | 'arguments' | 'object' | 'date' | 'array' | 'regexp' | 'error' | 'function' | 'class' | 'generatorfunction' | 'symbol' | 'map' | 'weakmap' | 'set' | 'weakset' | 'int8array' | 'uint8array' | 'uint8clampedarray' | 'int16array' | 'uint16array' | 'int32array' | 'uint32array' | 'float32array' | 'float64array';
/**
 * Find if a given value is undefined
 */
export declare function isUndefined(value: any): value is undefined;
/**
 * Find if a given value is null
 */
export declare function isNull(value: any): value is null;
/**
 * Find if a given value is a boolean
 */
export declare function isBoolean(value: any): value is boolean;
/**
 * Find if a given value is a buffer
 */
export declare function isBuffer(value: any): value is Buffer;
/**
 * Find if a given value is a number
 */
export declare function isNumber(value: any): value is number;
/**
 * Find if a given value is a string
 */
export declare function isString(value: any): value is string;
/**
 * Find if a given value is function arguments
 */
export declare function isArguments(value: any): boolean;
/**
 * Find if a given value is a plain object
 */
export declare function isObject(value: any): boolean;
/**
 * Find if a given value is a date instance
 */
export declare function isDate(value: any): value is Date;
/**
 * Find if a given value is an array
 */
export declare function isArray(value: any): value is any[];
/**
 * Find if a given value is an regularExpression
 */
export declare function isRegexp(value: any): value is RegExp;
/**
 * Find if a given value is an instance of Error class
 */
export declare function isError(value: any): boolean;
/**
 * Find if a given value is a Function
 */
export declare function isFunction(value: any): value is Function;
/**
 * Find if a given value is a class. Uses regular expression, since there
 * is no way to natively distinguish a class and a function in Javascript
 */
export declare function isClass(value: any): boolean;
/**
 * Find if a value is an integer or not
 */
export declare function isInteger(value: number): value is number;
/**
 * Find if a value is float value or not. The values with more than
 * zero remainder returns true
 */
export declare function isFloat(value: number): value is number;
/**
 * Find if the value has given decimal place or not.
 *
 * Since there is no direct way in Javascript to check for decimal place. We make
 * use of regex to find it out.
 *
 * Numeric values are converted to string by calling `value.toString()` before
 * testing it against the regex.
 *
 * If this method returns `true`, then you can safely parse the string with `parseFloat`
 * method.
 */
export declare function isDecimal(value: string | number, options?: {
    decimalPlaces?: string;
}): boolean;
