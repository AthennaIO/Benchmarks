/**
 * @athenna/artisan
 *
 * (c) João Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import boxes from 'cli-boxes';
import { Table } from '#src/Helpers/Table';
export class Sticker {
    /**
     * The head of the instruction.
     */
    _head;
    /**
     * The one line rows of the instruction.
     */
    _rows;
    /**
     * Set a head in the sticker.
     *
     * @example
     * ```ts
     * this.logger.sticker()
     *    .head('Project Created')
     *    .add(`cd ${this.colors.cyan('hello-world')}`)
     *    .add(`Run ${this.colors.cyan('node artisan serve --watch')} to start the server`)
     *    .render()
     * ```
     * Output:
     * ```bash
     * ╭──────────────────────────────────────────────────────────╮
     * │    Project Created                                       │
     * │──────────────────────────────────────────────────────────│
     * │                                                          │
     * │    cd hello-world                                        │
     * │    Run node artisan serve --watch to start the server    │
     * │                                                          │
     * ╰──────────────────────────────────────────────────────────╯
     * ```
     */
    head(head) {
        this._head = `    ${head}    `;
        return this;
    }
    /**
     * Set a row in the sticker.
     *
     * @example
     * ```ts
     * this.logger.sticker()
     *    .add(`cd ${this.colors.cyan('hello-world')}`)
     *    .add(`Run ${this.colors.cyan('node artisan serve --watch')} to start the server`)
     *    .render()
     * ```
     * Output:
     * ```bash
     * ╭──────────────────────────────────────────────────────────╮
     * │                                                          │
     * │    cd hello-world                                        │
     * │    Run node artisan serve --watch to start the server    │
     * │                                                          │
     * ╰──────────────────────────────────────────────────────────╯
     * ```
     */
    add(row) {
        if (!this._rows) {
            this._rows = '\n';
        }
        if (row === '') {
            this._rows = this._rows.concat('\n');
            return this;
        }
        this._rows = this._rows.concat(`    ${row}    \n`);
        return this;
    }
    /**
     * Create the sticker and return as string.
     */
    toString(opts) {
        const table = new Table();
        if (this._head) {
            table.head(this._head);
        }
        return table.row([this._rows]).toString({
            chars: boxes.round,
            ...opts,
        });
    }
    /**
     * Render the sticker in the console.
     *
     * @example
     * ```ts
     * this.logger.sticker()
     *    .add(`cd ${this.colors.cyan('hello-world')}`)
     *    .add(`Run ${this.colors.cyan('node artisan serve --watch')} to start the server`)
     *    .render()
     * ```
     * Output:
     * ```bash
     * ╭──────────────────────────────────────────────────────────╮
     * │                                                          │
     * │    cd hello-world                                        │
     * │    Run node artisan serve --watch to start the server    │
     * │                                                          │
     * ╰──────────────────────────────────────────────────────────╯
     * ```
     */
    render(opts) {
        const table = new Table();
        if (this._head) {
            table.head(this._head);
        }
        return table.row([this._rows]).render({
            chars: boxes.round,
            ...opts,
        });
    }
}
