/**
 * @athenna/artisan
 *
 * (c) João Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import CliTable3 from 'cli-table3';
export declare class Instruction {
    /**
     * The head of the instruction.
     */
    private _head;
    /**
     * The one line rows of the instruction.
     */
    private _rows;
    /**
     * Set a head in the instruction.
     *
     * @example
     * ```ts
     * this.logger.instruction()
     *    .head('Project Created')
     *    .add(`cd ${this.colors.cyan('hello-world')}`)
     *    .add(`Run ${this.colors.cyan('node artisan serve --watch')} to start the server`)
     *    .render()
     * ```
     * Output:
     * ```bash
     * ╭────────────────────────────────────────────────────────────╮
     * │    Project Created                                         │
     * │────────────────────────────────────────────────────────────│
     * │                                                            │
     * │    ❯ cd hello-world                                        │
     * │    ❯ Run node artisan serve --watch to start the server    │
     * │                                                            │
     * ╰────────────────────────────────────────────────────────────╯
     * ```
     */
    head(head: string): Instruction;
    /**
     * Set a row in the instruction.
     *
     * @example
     * ```ts
     * this.logger.instruction()
     *    .add(`cd ${this.colors.cyan('hello-world')}`)
     *    .add(`Run ${this.colors.cyan('node artisan serve --watch')} to start the server`)
     *    .render()
     * ```
     * Output:
     * ```bash
     * ╭────────────────────────────────────────────────────────────╮
     * │                                                            │
     * │    ❯ cd hello-world                                        │
     * │    ❯ Run node artisan serve --watch to start the server    │
     * │                                                            │
     * ╰────────────────────────────────────────────────────────────╯
     * ```
     */
    add(row: string): Instruction;
    /**
     * Create the sticker and return as string.
     */
    toString(opts?: CliTable3.TableConstructorOptions): string;
    /**
     * Render the instruction in the console.
     *
     * @example
     * ```ts
     * this.logger.instruction()
     *    .add(`cd ${this.colors.cyan('hello-world')}`)
     *    .add(`Run ${this.colors.cyan('node artisan serve --watch')} to start the server`)
     *    .render()
     * ```
     * Output:
     * ```bash
     * ╭────────────────────────────────────────────────────────────╮
     * │                                                            │
     * │    ❯ cd hello-world                                        │
     * │    ❯ Run node artisan serve --watch to start the server    │
     * │                                                            │
     * ╰────────────────────────────────────────────────────────────╯
     * ```
     */
    render(opts?: CliTable3.TableConstructorOptions): void;
}
