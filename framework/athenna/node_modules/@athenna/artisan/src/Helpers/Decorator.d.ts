/**
 * @athenna/artisan
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import 'reflect-metadata';
import { Commander } from '#src/Artisan/Commander';
import { ArgumentOptions, OptionOptions } from '#src';
export declare class Decorator {
    static readonly OPTIONS_KEY = "artisan:options";
    static readonly ARGUMENTS_KEY = "artisan:arguments";
    static readonly COMMANDER_KEY = "artisan:commander";
    static getCommander(target: any): Commander;
    static setOption(target: any, key: string, options: OptionOptions): typeof Decorator;
    static setArgument(target: any, argument: string, options: ArgumentOptions): typeof Decorator;
    static getOptions(target: any): Record<string, any>;
    static getArguments(target: any): string[];
}
