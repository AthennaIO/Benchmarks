/**
 * @athenna/artisan
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
export declare class ConsoleKernel {
    /**
     * Register all the commands found inside "rc.commands" config inside
     * the service provider and also register it in Commander.
     */
    registerCommands(argv?: string[]): Promise<void | void[]>;
    /**
     * Register the route commands by importing the file. Artisan is the only
     * type of service that loads the route file without using the "rc.preloads" property.
     * This behavior was implemented because of the command settings. To load the preloads
     * files, Artisan would need to bootstrap the Athenna application.
     */
    registerRouteCommands(path: string): Promise<void>;
    /**
     * Register the exception handler for all Artisan commands.
     */
    registerExceptionHandler(path?: string): Promise<void>;
    /**
     * Register a command by the path. This method will register the
     * command inside the service provider and also in Artisan.
     */
    registerCommandByPath(path: string): Promise<void>;
    /**
     * Resolve the import path by meta URL and import it.
     */
    private resolvePath;
    /**
     * Register all commands inside "rc.commands" object.
     */
    private registerAllCommands;
}
