/**
 * @athenna/artisan
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import type { Assert } from '@athenna/test';
import type { CommandOutput } from '@athenna/common';
export declare class TestOutput {
    /**
     * Japa assert class instance.
     */
    assert: Assert;
    /**
     * The command output object.
     */
    output: CommandOutput;
    constructor(assert: Assert, output: CommandOutput);
    /**
     * Assert the exit code of the output.
     *
     * @example
     * ```js
     * output.assertExitCode(1)
     * ```
     */
    assertExitCode(code: number): void;
    /**
     * Assert the exit code of the output.
     *
     * @example
     * ```js
     * output.assertIsNotExitCode(1)
     * ```
     */
    assertIsNotExitCode(code: number): void;
    /**
     * Assert the command exists with zero exit code.
     */
    assertSucceeded(): void;
    /**
     * Assert the command exists with non-zero exit code.
     */
    assertFailed(): void;
    /**
     * Assert command to log the expected message.
     */
    assertLogged(message: string, stream?: 'stdout' | 'stderr'): never;
    /**
     * Assert command to have not log the message.
     */
    assertNotLogged(message: string, stream?: 'stdout' | 'stderr'): void;
    /**
     * Assert command to have a log that matches the regex.
     */
    assertLogMatches(regex: RegExp, stream?: 'stdout' | 'stderr'): never;
    /**
     * Assert command to not have a log that matches the regexp.
     */
    assertLogNotMatches(regex: RegExp, stream?: 'stdout' | 'stderr'): void;
}
