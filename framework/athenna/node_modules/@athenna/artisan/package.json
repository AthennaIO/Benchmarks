{
    "name": "@athenna/artisan",
    "version": "4.2.0",
    "description": "The Athenna CLI application. Built on top of commander and inspired in @adonisjs/ace.",
    "license": "MIT",
    "author": "Jo√£o Lenon <lenon@athenna.io>",
    "bugs": "https://github.com/AthennaIO/Artisan/issues",
    "repository": "https://github.com/AthennaIO/Artisan.git",
    "homepage": "https://github.com/AthennaIO/Artisan#readme",
    "keywords": [
        "esm",
        "ejs",
        "nodejs",
        "artisan",
        "commander",
        "athenna"
    ],
    "scripts": {
        "build": "rimraf build && tsc --project bin/tsconfig.build.json",
        "lint:fix": "eslint \"{bin,src,tests}/**/*.ts\" --fix",
        "test": "npm run --silent lint:fix && sh node bin/test.ts",
        "test:debug": "cross-env NODE_DEBUG=athenna:* sh node --inspect bin/test.ts",
        "test:coverage": "c8 npm run --silent test"
    },
    "files": [
        "src/*.js",
        "src/*.d.ts",
        "src/**/*.js",
        "src/**/*.d.ts",
        "templates",
        "configurer"
    ],
    "type": "module",
    "main": "./src/index.js",
    "types": "./src/index.d.ts",
    "exports": {
        ".": "./src/index.js",
        "./types": "./src/types/index.js",
        "./package.json": "./package.json",
        "./kernels/ConsoleKernel": "./src/kernels/ConsoleKernel.js",
        "./handlers/ConsoleExceptionHandler": "./src/handlers/ConsoleExceptionHandler.js",
        "./providers/ArtisanProvider": "./src/providers/ArtisanProvider.js",
        "./commands/ListCommand": "./src/commands/ListCommand.js",
        "./commands/ConfigureCommand": "./src/commands/ConfigureCommand.js",
        "./commands/MakeCommandCommand": "./src/commands/MakeCommandCommand.js",
        "./commands/TemplateCustomizeCommand": "./src/commands/TemplateCustomizeCommand.js"
    },
    "imports": {
        "#bin/*": "./bin/*.js",
        "#bin": "./bin/index.js",
        "#src/*": "./src/*.js",
        "#src": "./src/index.js",
        "#tests/*": "./tests/*.js",
        "#tests": "./tests/index.js"
    },
    "dependencies": {
        "chalk-rainbow": "^1.0.0",
        "cli-boxes": "^3.0.0",
        "cli-table3": "^0.6.3",
        "columnify": "^1.6.0",
        "commander": "^9.5.0",
        "figlet": "^1.6.0",
        "inquirer": "^9.2.8",
        "log-update": "^5.0.1",
        "ora": "^6.3.1"
    },
    "devDependencies": {
        "@athenna/common": "^4.4.0",
        "@athenna/config": "^4.3.0",
        "@athenna/ioc": "^4.1.0",
        "@athenna/logger": "^4.1.0",
        "@athenna/test": "^4.3.0",
        "@athenna/view": "^4.1.0",
        "@types/sinon": "^10.0.13",
        "@typescript-eslint/eslint-plugin": "^5.56.0",
        "@typescript-eslint/parser": "^5.56.0",
        "c8": "^7.12.0",
        "commitizen": "^4.2.6",
        "cross-env": "^7.0.3",
        "cz-conventional-changelog": "^3.3.0",
        "eslint": "^8.36.0",
        "eslint-config-prettier": "^8.8.0",
        "eslint-config-standard": "^17.0.0",
        "eslint-plugin-import": "^2.27.5",
        "eslint-plugin-n": "^15.6.1",
        "eslint-plugin-prettier": "^4.2.1",
        "eslint-plugin-promise": "^6.1.1",
        "husky": "^3.1.0",
        "js-yaml": "^4.1.0",
        "lint-staged": "^12.5.0",
        "prettier": "^2.8.7",
        "reflect-metadata": "^0.1.13",
        "ts-node": "^10.9.1",
        "typescript": "^5.0.2"
    },
    "c8": {
        "all": true,
        "include": [
            "src/**/*.ts"
        ],
        "exclude": [
            "src/artisan/Command.ts",
            "src/artisan/Commander.ts",
            "src/artisan/Configurer.ts",
            "src/commands/*",
            "src/types/*",
            "src/helpers/Table.ts",
            "src/helpers/Sticker.ts",
            "src/helpers/Instruction.ts",
            "src/helpers/command/Logger.ts"
        ],
        "reporter": [
            "text-summary",
            "html"
        ],
        "report-dir": "./tests/coverage",
        "check-coverage": true
    },
    "husky": {
        "hooks": {
            "prepare-commit-msg": "lint-staged && exec < /dev/tty && git cz --hook || true"
        }
    },
    "lint-staged": {
        "*.ts": [
            "eslint --fix",
            "git add"
        ],
        "*.json": [
            "prettier --write",
            "git add"
        ]
    },
    "config": {
        "commitizen": {
            "path": "./node_modules/cz-conventional-changelog"
        }
    },
    "prettier": {
        "singleQuote": true,
        "trailingComma": "all",
        "arrowParens": "avoid",
        "endOfLine": "lf",
        "semi": false,
        "printWidth": 80,
        "overrides": [
            {
                "files": "tests/**/*",
                "options": {
                    "printWidth": 120
                }
            }
        ]
    },
    "eslintIgnore": [],
    "eslintConfig": {
        "env": {
            "es2021": true,
            "node": true
        },
        "globals": {
            "ioc": true,
            "Env": true,
            "Path": true,
            "Config": true
        },
        "plugins": [
            "prettier",
            "@typescript-eslint"
        ],
        "extends": [
            "standard",
            "eslint:recommended",
            "plugin:prettier/recommended",
            "plugin:@typescript-eslint/recommended",
            "plugin:@typescript-eslint/eslint-recommended"
        ],
        "parser": "@typescript-eslint/parser",
        "rules": {
            "camelcase": "off",
            "dot-notation": "off",
            "prettier/prettier": "error",
            "no-useless-constructor": "off",
            "@typescript-eslint/no-explicit-any": "off",
            "@typescript-eslint/no-empty-function": "off",
            "@typescript-eslint/no-unused-vars": [
                "error",
                {
                    "argsIgnorePattern": "^_",
                    "varsIgnorePattern": "^_",
                    "caughtErrorsIgnorePattern": "^_"
                }
            ]
        }
    },
    "athenna": {
        "templates": {
            "command": "./templates/command.edge"
        },
        "commands": {
            "test": {
                "path": "./tests/stubs/Test.js"
            },
            "list": {
                "path": "#src/commands/ListCommand",
                "loadAllCommands": true
            },
            "configure": "#src/commands/ConfigureCommand",
            "loadapp": {
                "path": "#tests/stubs/commands/LoadAppCommand",
                "loadApp": true,
                "environments": [
                    "worker",
                    "console"
                ]
            },
            "make:command": "#src/commands/MakeCommandCommand",
            "template:customize": "#src/commands/TemplateCustomizeCommand"
        },
        "providers": []
    }
}
