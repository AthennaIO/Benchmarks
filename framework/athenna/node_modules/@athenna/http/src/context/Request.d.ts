/**
 * @athenna/http
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import type { FastifyRequest } from 'fastify';
export declare class Request {
    /**
     * The fastify request object.
     */
    request: FastifyRequest;
    constructor(request: FastifyRequest);
    /**
     * Get the request id.
     *
     * @example 12345
     */
    get id(): string;
    /**
     * Get the request ip.
     *
     * @example 192.168.0.1
     */
    get ip(): string;
    /**
     * Get the request hostname.
     *
     * @example localhost
     */
    get hostname(): string;
    /**
     * Get the request protocol.
     *
     * @example http
     */
    get protocol(): 'http' | 'https';
    /**
     * Get the request method.
     *
     * @example GET
     */
    get method(): string;
    /**
     * Get the base url from request.
     *
     * @example /users/1
     */
    get baseUrl(): string;
    /**
     * Get the base url with host and port info from request.
     *
     * @example http://localhost:3030/users/1
     */
    get baseHostUrl(): string;
    /**
     * Get the route url from request.
     *
     * @example /users/:id
     */
    get routeUrl(): string;
    /**
     * Get the route url with host and port info from request.
     *
     * @example http://localhost:3030/users/:id
     */
    get routeHostUrl(): string;
    /**
     * Get the original url from request.
     *
     * @example /users/1?query=true
     */
    get originalUrl(): string;
    /**
     * Get the original url with host and port info from request.
     *
     * @example /users/1?query=true
     */
    get originalHostUrl(): string;
    /**
     * Get all body from request.
     */
    get body(): any | any[];
    /**
     * Get all params from request.
     */
    get params(): any;
    /**
     * Get all queries from request.
     */
    get queries(): any;
    /**
     * Get all headers from request.
     */
    get headers(): any;
    /**
     * Get the server port.
     */
    get port(): number;
    /**
     * Get the http version.
     */
    get version(): string;
    /**
     * Get a value from the request params or the default value.
     */
    param(param: string, defaultValue?: any): any;
    /**
     * Get a value from the request query param or the default value.
     */
    query(query: string, defaultValue?: any): any;
    /**
     * Get a value from the request header or the default value.
     */
    header(header: string, defaultValue?: any): any;
    /**
     * Get only the selected values from the request body.
     */
    only(keys: string[]): any;
    /**
     * Get all the values from the request body except the selected ones.
     */
    except(keys: string[]): any;
    /**
     * Get a value from the request body or the default value.
     */
    input(key: string, defaultValue?: any): any;
    /**
     * Get a value from the request body or the default value.
     */
    payload(key: string, defaultValue?: any): any;
    /**
     * Add the hostname and port to the url.
     */
    private getHostUrlFor;
    /**
     * Get the address info of the server. This method will return the
     * port used to listen the server, the family (IPv4, IPv6) and the
     * server address (127.0.0.1).
     */
    private getAddressInfo;
}
