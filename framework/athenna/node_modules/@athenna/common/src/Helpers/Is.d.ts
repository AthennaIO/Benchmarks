/**
 * @athenna/common
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
/// <reference types="node" resolution-mode="require"/>
import { Exception } from '#src/helpers/Exception';
export declare class Is {
    /**
     * Return the kindOf.
     */
    static kindOf(value: any): string;
    /**
     * Verify if is valid Uuid.
     */
    static Uuid(value: string): boolean;
    /**
     * Verify if the value is defined, even
     * with falsy values like false and ''.
     */
    static Defined(value: any): boolean;
    /**
     * Verify if is valid Json.
     */
    static Json(value: string): boolean;
    /**
     * Verify if is valid Ip.
     */
    static Ip(value: string): boolean;
    /**
     * Verify if is valid Empty.
     */
    static Empty(value: string | any | any[]): boolean;
    /**
     * Verify if is a valid Cep.
     */
    static Cep(cep: string | number): boolean;
    /**
     * Verify if is a valid Cpf.
     */
    static Cpf(cpf: string | number): boolean;
    /**
     * Verify if is a valid Cnpj.
     */
    static Cnpj(cnpj: string | number): boolean;
    /**
     * Verify if is a valid Async function.
     */
    static Async(value: any): boolean;
    /**
     * Verify if is a valid Undefined.
     */
    static Undefined(value: any): value is undefined;
    /**
     * Verify if is a valid Null.
     */
    static Null(value: any): value is null;
    /**
     * Verify if is a valid Boolean.
     */
    static Boolean(value: any): value is boolean;
    /**
     * Verify if is a valid Buffer.
     */
    static Buffer(value: any): value is Buffer;
    /**
     * Verify if is a valid Number.
     */
    static Number(value: any): value is number;
    /**
     * Verify if is a valid String.
     */
    static String(value: any): value is string;
    /**
     * Verify if is a valid Object.
     */
    static Object(value: any): value is object | Record<string, any>;
    /**
     * Verify if is a valid Date.
     */
    static Date(value: any): value is Date;
    /**
     * Verify if is a valid Array.
     */
    static Array(value: any): value is Array<any>;
    /**
     * Verify if is a valid Regexp.
     */
    static Regexp(value: any): value is RegExp;
    /**
     * Verify if is a valid Error.
     */
    static Error(value: any): value is Error;
    /**
     * Verify if is a valid internal JS error.
     */
    static Exception(value: any): value is Exception;
    /**
     * Verify if is a valid Function.
     */
    static Function(value: any): value is Function;
    /**
     * Verify if is a valid Class.
     */
    static Class(value: any): boolean;
    /**
     * Verify if is a valid Integer.
     */
    static Integer(value: any): value is number;
    /**
     * Verify if is a valid Float.
     */
    static Float(value: any): value is number;
    /**
     * Verify if is a valid ArrayOfObjects.
     */
    static ArrayOfObjects(value: any[]): value is Array<any>;
}
