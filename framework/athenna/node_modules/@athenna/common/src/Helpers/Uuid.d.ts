/**
 * @athenna/common
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
export declare class Uuid {
    /**
     * Verify if string is a valid uuid.
     */
    static verify(token: string, options?: {
        prefix?: string;
        ignorePrefix?: boolean;
    }): boolean;
    /**
     * Generate an uuid token
     */
    static generate(prefix?: string): string;
    /**
     * Return the token without his prefix.
     */
    static getToken(token: string): string;
    /**
     * Return the prefix without his token.
     */
    static getPrefix(token: string): string | null;
    /**
     * Inject a prefix in the uuid token.
     */
    static injectPrefix(prefix: string, token: string): string;
    /**
     * Change the prefix of an uuid token
     */
    static changePrefix(newPrefix: string, token: string): string;
    /**
     * Change the token prefix or generate a new one
     */
    static changeOrGenerate(prefix: string, token?: string): string;
}
