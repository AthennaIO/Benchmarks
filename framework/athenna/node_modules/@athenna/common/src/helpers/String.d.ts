/**
 * @athenna/common
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
export declare class String {
    /**
     * Generate random string by size.
     */
    static generateRandom(size: number): string;
    /**
     * Generate random color in hexadecimal format.
     */
    static generateRandomColor(): string;
    /**
     * Normalizes the string in base64 format removing
     * special chars.
     */
    static normalizeBase64(value: string): string;
    /**
     * Transforms the string to "camelCase".
     */
    static toCamelCase(value: string): string;
    /**
     * Transforms the string to "snake_case".
     */
    static toSnakeCase(value: string, capitalize?: boolean): string;
    /**
     * Transforms the string to "CONSTANT_CASE".
     */
    static toConstantCase(value: string): string;
    /**
     * Transforms the string to "PascalCase".
     */
    static toPascalCase(value: string): string;
    /**
     * Transforms the string to "Sentence case".
     */
    static toSentenceCase(value: string, capitalize?: boolean): string;
    /**
     * Transforms the string to "dot.case".
     */
    static toDotCase(value: string, capitalize?: boolean): string;
    /**
     * Removes all sorted cases from string.
     */
    static toNoCase(value: string): string;
    /**
     * Transforms a string to "dash-case"
     */
    static toDashCase(value: string, capitalize?: boolean): string;
    /**
     * Transforms a word to plural
     */
    static pluralize(word: string): string;
    /**
     * Transforms a word to singular.
     */
    static singularize(word: string): string;
    /**
     * Transforms a number to your ordinal format.
     */
    static ordinalize(value: string | number): string;
}
