/**
 * @athenna/common
 *
 * (c) JoÃ£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
export declare class Number {
    /**
     * Get the higher number from an array of numbers.
     */
    static getHigher(numbers: number[]): number;
    /**
     * Get km radius between two coordinates.
     */
    static getKmRadius(centerCord: {
        latitude: number;
        longitude: number;
    }, pointCord: {
        latitude: number;
        longitude: number;
    }): number;
    /**
     * Get the lower number from an array of numbers.
     */
    static getLower(numbers: number[]): number;
    /**
     * Extract all numbers inside a string and
     * return as a unique number.
     */
    static extractNumber(string: string): number;
    /**
     * Extract all numbers inside a string.
     */
    static extractNumbers(string: string): number[];
    /**
     * The average of all numbers in function arguments.
     */
    static argsAverage(...args: number[]): number;
    /**
     * The average of all numbers in the array.
     */
    static arrayAverage(array: number[]): number;
    /**
     * Generate a random integer from a determined interval of numbers.
     */
    static randomIntFromInterval(min: number, max: number): number;
}
