/**
 * @athenna/logger
 *
 * (c) Jo√£o Lenon <lenon@athenna.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import { Driver } from '#src/Drivers/Driver';
export declare class DriverFactory {
    /**
     * Drivers of DriverFactory.
     */
    static drivers: Map<string, {
        Driver: any;
    }>;
    /**
     * Return an array with all available drivers.
     */
    static availableDrivers(): any[];
    /**
     * Fabricate a new instance of a driver based on
     * channel configurations.
     */
    static fabricate(channelName: string, configs?: any): Driver;
    /**
     * Fabricate a new instance of a driver with vanilla
     * configurations.
     */
    static fabricateVanilla(configs?: any): Driver;
    /**
     * Creates a new driver implementation.
     */
    static createDriver(name: string, driver: typeof Driver): void;
    /**
     * Get all the configuration of a channel.
     */
    static getChannelConfig(channelName: string): any;
}
