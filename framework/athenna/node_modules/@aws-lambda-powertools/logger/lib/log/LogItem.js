"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogItem = void 0;
const lodash_merge_1 = __importDefault(require("lodash.merge"));
class LogItem {
    constructor(params) {
        this.attributes = {};
        // Add attributes in the log item in this order:
        // - Base attributes supported by the Powertool by default
        // - Persistent attributes provided by developer, not formatted
        // - Ephemeral attributes provided as parameters for a single log item (done later)
        this.addAttributes(params.baseAttributes);
        this.addAttributes(params.persistentAttributes);
    }
    addAttributes(attributes) {
        this.attributes = (0, lodash_merge_1.default)(this.attributes, attributes);
        return this;
    }
    getAttributes() {
        return this.attributes;
    }
    prepareForPrint() {
        this.setAttributes(this.removeEmptyKeys(this.getAttributes()));
    }
    removeEmptyKeys(attributes) {
        const newAttributes = {};
        for (const key in attributes) {
            if (attributes[key] !== undefined &&
                attributes[key] !== '' &&
                attributes[key] !== null) {
                newAttributes[key] = attributes[key];
            }
        }
        return newAttributes;
    }
    setAttributes(attributes) {
        this.attributes = attributes;
    }
}
exports.LogItem = LogItem;
