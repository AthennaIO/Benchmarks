"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNullOrUndefined = exports.isTruthy = exports.isString = exports.isRecord = void 0;
/**
 * Returns true if the passed value is a record (object).
 *
 * @param value
 */
const isRecord = (value) => {
    return (Object.prototype.toString.call(value) === '[object Object]' &&
        !Object.is(value, null));
};
exports.isRecord = isRecord;
/**
 * Returns true if the passed value is truthy.
 *
 * @param value
 */
const isTruthy = (value) => {
    if (typeof value === 'string') {
        return value !== '';
    }
    else if (typeof value === 'number') {
        return value !== 0;
    }
    else if (typeof value === 'boolean') {
        return value;
    }
    else if (Array.isArray(value)) {
        return value.length > 0;
    }
    else if (isRecord(value)) {
        return Object.keys(value).length > 0;
    }
    else {
        return false;
    }
};
exports.isTruthy = isTruthy;
/**
 * Returns true if the passed value is null or undefined.
 *
 * @param value
 */
const isNullOrUndefined = (value) => {
    return Object.is(value, null) || Object.is(value, undefined);
};
exports.isNullOrUndefined = isNullOrUndefined;
/**
 * Returns true if the passed value is a string.
 * @param value
 * @returns
 */
const isString = (value) => {
    return typeof value === 'string';
};
exports.isString = isString;
