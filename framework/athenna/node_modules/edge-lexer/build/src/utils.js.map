{"version":3,"sources":["../../src/utils.ts"],"sourcesContent":["/*\n * edge-lexer\n *\n * (c) Edge\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { TagTypes, MustacheTypes } from './enums.js'\nimport type { Token, TagToken, MustacheToken } from './types.js'\n\n/**\n * Returns true when token is a tag with a given name\n */\nexport function isTag(token: Token, name?: string): token is TagToken {\n  if (token.type === TagTypes.TAG || token.type === TagTypes.ETAG) {\n    return name ? token.properties.name === name : true\n  }\n  return false\n}\n\n/**\n * Returns true when token is an escape tag with a given name\n */\nexport function isEscapedTag(token: Token, name?: string): token is TagToken {\n  if (token.type === TagTypes.ETAG) {\n    return name ? token.properties.name === name : true\n  }\n  return false\n}\n\n/**\n * Returns true when token.type is a mustache type\n */\nexport function isMustache(token: Token): token is MustacheToken {\n  return (\n    token.type === MustacheTypes.EMUSTACHE ||\n    token.type === MustacheTypes.ESMUSTACHE ||\n    token.type === MustacheTypes.MUSTACHE ||\n    token.type === MustacheTypes.SMUSTACHE\n  )\n}\n\n/**\n * Returns true when token.type is a safe mustache type\n */\nexport function isSafeMustache(token: Token): token is MustacheToken {\n  return token.type === MustacheTypes.ESMUSTACHE || token.type === MustacheTypes.SMUSTACHE\n}\n\n/**\n * Returns true when toke.type is an escaped mustache type\n */\nexport function isEscapedMustache(token: Token): token is MustacheToken {\n  return token.type === MustacheTypes.EMUSTACHE || token.type === MustacheTypes.ESMUSTACHE\n}\n\n/**\n * Returns line and column number for a given lexer token\n */\nexport function getLineAndColumn(token: Token): [number, number] {\n  if (token.type === 'newline' || token.type === 'raw') {\n    return [token.line, 0]\n  }\n  return [token.loc.start.line, token.loc.start.col]\n}\n"],"mappings":";;;AAeO,SAAS,MAAM,OAAc,MAAkC;AACpE,MAAI,MAAM,4BAAyB,MAAM,8BAAwB;AAC/D,WAAO,OAAO,MAAM,WAAW,SAAS,OAAO;AAAA,EACjD;AACA,SAAO;AACT;AAKO,SAAS,aAAa,OAAc,MAAkC;AAC3E,MAAI,MAAM,8BAAwB;AAChC,WAAO,OAAO,MAAM,WAAW,SAAS,OAAO;AAAA,EACjD;AACA,SAAO;AACT;AAKO,SAAS,WAAW,OAAsC;AAC/D,SACE,MAAM,0CACN,MAAM,4CACN,MAAM,sCACN,MAAM;AAEV;AAKO,SAAS,eAAe,OAAsC;AACnE,SAAO,MAAM,4CAAqC,MAAM;AAC1D;AAKO,SAAS,kBAAkB,OAAsC;AACtE,SAAO,MAAM,0CAAoC,MAAM;AACzD;AAKO,SAAS,iBAAiB,OAAgC;AAC/D,MAAI,MAAM,SAAS,aAAa,MAAM,SAAS,OAAO;AACpD,WAAO,CAAC,MAAM,MAAM,CAAC;AAAA,EACvB;AACA,SAAO,CAAC,MAAM,IAAI,MAAM,MAAM,MAAM,IAAI,MAAM,GAAG;AACnD;","names":[]}