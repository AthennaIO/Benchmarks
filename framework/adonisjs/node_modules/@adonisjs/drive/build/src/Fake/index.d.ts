/// <reference types="node" />
import { DisksList, FakeDriveContract, FakeDriverContract } from '@ioc:Adonis/Core/Drive';
/**
 * An implementation of the fake drive
 */
export declare class FakeDrive implements FakeDriveContract {
    /**
     * Reference to registered fakes
     */
    fakes: Map<keyof DisksList, FakeDriverContract>;
    /**
     * Find a file for the given path exists. Searched
     * across all the faked disk
     */
    exists(location: string): Promise<boolean>;
    /**
     * Get the contents of the file as buffer
     */
    get(location: string): Promise<Buffer>;
    /**
     * Get the contents of the file as buffer
     */
    bytes(location: string): Promise<number>;
    /**
     * Access the faked driver
     */
    use(disk: keyof DisksList): FakeDriverContract;
    /**
     * Find if a disk has been faked
     */
    isFaked(disk: keyof DisksList): boolean;
    /**
     * Restore a fake
     */
    restore(disk: keyof DisksList): void;
}
