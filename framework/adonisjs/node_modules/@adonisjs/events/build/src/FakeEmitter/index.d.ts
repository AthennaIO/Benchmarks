import { FakeEmitterContract } from '@ioc:Adonis/Core/Event';
/**
 * Fake emitter to be used for finding and asserting
 * faked events
 */
export declare class FakeEmitter implements FakeEmitterContract {
    events: {
        name: string;
        data: any;
    }[];
    /**
     * Get all the emitted events
     */
    all(): {
        name: string;
        data: any;
    }[];
    /**
     * Returns the size of captured events
     */
    size(): number;
    /**
     * Find if the event has emitted
     */
    exists(eventOrCallback: string | ((event: {
        name: string;
        data: any;
    }) => boolean)): boolean;
    /**
     * Get selected events
     */
    filter(eventOrCallback: string | ((event: {
        name: string;
        data: any;
    }) => boolean)): any[];
    /**
     * Find a specific event
     */
    find(eventOrCallback: string | ((event: {
        name: string;
        data: any;
    }) => boolean)): any;
    restore(): void;
}
